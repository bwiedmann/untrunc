name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Cache
        uses: actions/cache@v2.1.7
        with:
          path: libav
          key: libav-${{ runner.os }}
      - name: Set up NASM
        uses: ilammy/setup-nasm@v1.2.1
      - name: configure and make libav
        run: cd libav && ./configure && make
      - name: make
        run: g++ -o untrunc-${{ runner.os }} -I./libav file.cpp main.cpp track.cpp atom.cpp codec_*.cpp codecstats.cpp codec.cpp mp4.cpp log.cpp -L./libav/libavformat -lavformat -L./libav/libavcodec -lavcodec -L./libav/libavresample -lavresample -L./libav/libavutil -lavutil -lpthread -lz -lbz2 -framework CoreFoundation -framework CoreVideo -framework VideoDecodeAcceleration -std=c++11
      - name: Create info file
        run: |
           echo -e "ref: $GITHUB_REF \ncommit: $GITHUB_SHA\nbuild: $(date +"%Y-%m-%dT%H:%M:%SZ")" \
           > info-${{ runner.os }}.txt

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Cache
        uses: actions/cache@v2.1.7
        with:
          path: libav
          key: libav-${{ runner.os }}
      - name: Set up NASM
        uses: ilammy/setup-nasm@v1.2.1
      - name: configure and make libav
        run: cd libav && ./configure && make
      - name: make
        run: g++ -o untrunc-${{ runner.os }} -I./libav file.cpp main.cpp track.cpp atom.cpp codec_*.cpp codecstats.cpp codec.cpp mp4.cpp log.cpp -L./libav/libavformat -lavformat -L./libav/libavcodec -lavcodec -L./libav/libavresample -lavresample -L./libav/libavutil -lavutil -lpthread -lz -lbz2
      - name: Create info file
        run: |
           echo -e "ref: $GITHUB_REF \ncommit: $GITHUB_SHA\nbuild: $(date +"%Y-%m-%dT%H:%M:%SZ")" \
           > info-${{ runner.os }}.txt           
      - name: Upload files as artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: pass_status_build_linux
          path: untrunc-${{ runner.os }}

  bundle-nightly-release:
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Update nightly release
        uses: pyTooling/Actions/releaser@main
        with:
          tag: nightly-${{ runner.os }}
          rm: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            untrunc-${{ runner.os }}
